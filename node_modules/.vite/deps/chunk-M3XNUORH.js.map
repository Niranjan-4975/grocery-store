{
  "version": 3,
  "sources": ["../../vuetify/src/components/VBtn/VBtn.tsx", "../../vuetify/src/composables/selectLink.ts"],
  "sourcesContent": ["// Styles\nimport './VBtn.sass'\n\n// Components\nimport { VBtnToggleSymbol } from '@/components/VBtnToggle/VBtnToggle'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VProgressCircular } from '@/components/VProgressCircular'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { makeLoaderProps, useLoader } from '@/composables/loader'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { useSelectLink } from '@/composables/selectLink'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport vRipple from '@/directives/ripple'\n\n// Utilities\nimport { computed, toDisplayString, toRef, withDirectives } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport type VBtnSlots = {\n  default: never\n  prepend: never\n  append: never\n  loader: never\n}\n\nexport const makeVBtnProps = propsFactory({\n  active: {\n    type: Boolean,\n    default: undefined,\n  },\n  activeColor: String,\n  baseColor: String,\n  symbol: {\n    type: null,\n    default: VBtnToggleSymbol,\n  },\n  flat: Boolean,\n  icon: [Boolean, String, Function, Object] as PropType<boolean | IconValue>,\n  prependIcon: IconValue,\n  appendIcon: IconValue,\n\n  block: Boolean,\n  readonly: Boolean,\n  slim: Boolean,\n  stacked: Boolean,\n  spaced: String as PropType<'start' | 'end' | 'both'>,\n\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n\n  text: {\n    type: [String, Number, Boolean],\n    default: undefined,\n  },\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeLoaderProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'button' }),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'elevated' } as const),\n}, 'VBtn')\n\nexport const VBtn = genericComponent<VBtnSlots>()({\n  name: 'VBtn',\n\n  props: makeVBtnProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { loaderClasses } = useLoader(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n    const group = useGroupItem(props, props.symbol, false)\n    const link = useLink(props, attrs)\n\n    const isActive = computed(() => {\n      if (props.active !== undefined) {\n        return props.active\n      }\n\n      if (link.isLink.value) {\n        return link.isActive?.value\n      }\n\n      return group?.isSelected.value\n    })\n\n    const color = toRef(() => isActive.value ? props.activeColor ?? props.color : props.color)\n    const variantProps = computed(() => {\n      const showColor = (\n        (group?.isSelected.value && (!link.isLink.value || link.isActive?.value)) ||\n        (!group || link.isActive?.value)\n      )\n      return ({\n        color: showColor ? color.value ?? props.baseColor : props.baseColor,\n        variant: props.variant,\n      })\n    })\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n\n    const isDisabled = computed(() => group?.disabled.value || props.disabled)\n    const isElevated = toRef(() => {\n      return props.variant === 'elevated' && !(props.disabled || props.flat || props.border)\n    })\n    const valueAttr = computed(() => {\n      if (props.value === undefined || typeof props.value === 'symbol') return undefined\n\n      return Object(props.value) === props.value\n        ? JSON.stringify(props.value, null, 0)\n        : props.value\n    })\n\n    function onClick (e: MouseEvent) {\n      if (\n        isDisabled.value ||\n        (link.isLink.value && (\n          e.metaKey ||\n          e.ctrlKey ||\n          e.shiftKey ||\n          (e.button !== 0) ||\n          attrs.target === '_blank'\n        ))\n      ) return\n\n      if (link.isLink.value) {\n        link.navigate?.(e)\n      } else {\n        // Group active state for links is handled by useSelectLink\n        group?.toggle()\n      }\n    }\n\n    useSelectLink(link, group?.select)\n\n    useRender(() => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasPrepend = !!(props.prependIcon || slots.prepend)\n      const hasAppend = !!(props.appendIcon || slots.append)\n      const hasIcon = !!(props.icon && props.icon !== true)\n\n      return withDirectives(\n        <Tag\n          type={ Tag === 'a' ? undefined : 'button' }\n          class={[\n            'v-btn',\n            group?.selectedClass.value,\n            {\n              'v-btn--active': isActive.value,\n              'v-btn--block': props.block,\n              'v-btn--disabled': isDisabled.value,\n              'v-btn--elevated': isElevated.value,\n              'v-btn--flat': props.flat,\n              'v-btn--icon': !!props.icon,\n              'v-btn--loading': props.loading,\n              'v-btn--readonly': props.readonly,\n              'v-btn--slim': props.slim,\n              'v-btn--stacked': props.stacked,\n            },\n            props.spaced\n              ? [\n                'v-btn--spaced',\n                `v-btn--spaced-${props.spaced}`,\n              ]\n              : [],\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            loaderClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            props.class,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n            locationStyles.value,\n            sizeStyles.value,\n            props.style,\n          ]}\n          aria-busy={ props.loading ? true : undefined }\n          disabled={ isDisabled.value || undefined }\n          tabindex={ props.loading || props.readonly ? -1 : undefined }\n          onClick={ onClick }\n          value={ valueAttr.value }\n          { ...link.linkProps }\n        >\n          { genOverlays(true, 'v-btn') }\n\n          { !props.icon && hasPrepend && (\n            <span key=\"prepend\" class=\"v-btn__prepend\">\n              { !slots.prepend ? (\n                <VIcon\n                  key=\"prepend-icon\"\n                  icon={ props.prependIcon }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !props.prependIcon }\n                  defaults={{\n                    VIcon: {\n                      icon: props.prependIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </span>\n          )}\n\n          <span class=\"v-btn__content\" data-no-activator=\"\">\n            { (!slots.default && hasIcon) ? (\n              <VIcon\n                key=\"content-icon\"\n                icon={ props.icon }\n              />\n            ) : (\n              <VDefaultsProvider\n                key=\"content-defaults\"\n                disabled={ !hasIcon }\n                defaults={{\n                  VIcon: {\n                    icon: props.icon,\n                  },\n                }}\n              >\n                { slots.default?.() ?? toDisplayString(props.text) }\n              </VDefaultsProvider>\n            )}\n          </span>\n\n          { !props.icon && hasAppend && (\n            <span key=\"append\" class=\"v-btn__append\">\n              { !slots.append ? (\n                <VIcon\n                  key=\"append-icon\"\n                  icon={ props.appendIcon }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !props.appendIcon }\n                  defaults={{\n                    VIcon: {\n                      icon: props.appendIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.append }\n                />\n              )}\n            </span>\n          )}\n\n          { !!props.loading && (\n            <span key=\"loader\" class=\"v-btn__loader\">\n              { slots.loader?.() ?? (\n                <VProgressCircular\n                  color={ typeof props.loading === 'boolean' ? undefined : props.loading }\n                  indeterminate\n                  width=\"2\"\n                />\n              )}\n            </span>\n          )}\n        </Tag>,\n        [[\n          vRipple,\n          !isDisabled.value && props.ripple,\n          '',\n          { center: !!props.icon },\n        ]]\n      )\n    })\n\n    return { group }\n  },\n})\n\nexport type VBtn = InstanceType<typeof VBtn>\n", "// Utilities\nimport { nextTick, watch } from 'vue'\n\n// Types\nimport type { UseLink } from './router'\n\nexport function useSelectLink (link: UseLink, select?: (value: boolean, e?: Event) => void) {\n  watch(() => link.isActive?.value, isActive => {\n    if (link.isLink.value && isActive != null && select) {\n      nextTick(() => {\n        select(isActive)\n      })\n    }\n  }, {\n    immediate: true,\n  })\n}\n"],
  "mappings": "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",
  "names": ["useSelectLink", "link", "select", "watch", "isActive", "value", "isLink", "nextTick", "immediate", "makeVBtnProps", "propsFactory", "active", "type", "Boolean", "default", "undefined", "activeColor", "String", "baseColor", "symbol", "VBtnToggleSymbol", "flat", "icon", "Function", "Object", "prependIcon", "IconValue", "appendIcon", "block", "readonly", "slim", "stacked", "spaced", "ripple", "text", "Number", "makeBorderProps", "makeComponentProps", "makeDensityProps", "makeDimensionProps", "makeElevationProps", "makeGroupItemProps", "makeLoaderProps", "makeLocationProps", "makePositionProps", "makeRoundedProps", "makeRouterProps", "makeSizeProps", "makeTagProps", "tag", "makeThemeProps", "makeVariantProps", "variant", "VBtn", "genericComponent", "name", "props", "emits", "val", "setup", "_ref", "attrs", "slots", "themeClasses", "provideTheme", "borderClasses", "useBorder", "densityClasses", "useDensity", "dimensionStyles", "useDimension", "elevationClasses", "useElevation", "loaderClasses", "useLoader", "locationStyles", "useLocation", "positionClasses", "usePosition", "roundedClasses", "useRounded", "sizeClasses", "sizeStyles", "useSize", "group", "useGroupItem", "link", "useLink", "isActive", "computed", "isLink", "value", "isSelected", "color", "toRef", "variantProps", "showColor", "colorClasses", "colorStyles", "variantClasses", "useVariant", "isDisabled", "disabled", "isElevated", "border", "valueAttr", "JSON", "stringify", "onClick", "e", "metaKey", "ctrlKey", "shiftKey", "button", "target", "navigate", "toggle", "useSelectLink", "select", "useRender", "Tag", "hasPrepend", "prepend", "hasAppend", "append", "hasIcon", "withDirectives", "_createVNode", "_mergeProps", "selectedClass", "loading", "class", "style", "linkProps", "genOverlays", "_createElementVNode", "VIcon", "VDefaultsProvider", "toDisplayString", "loader", "VProgressCircular", "vRipple", "center"]
}
